{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","components/constants.js","components/TodosFilter.jsx","components/TodoApp.jsx","App.js","index.js"],"names":["TodoItem","todo","completedToggle","deleteTodo","changeTodo","useState","editing","setEditing","title","newTitle","setNewTitle","className","ClassNames","completed","type","checked","onChange","id","onDoubleClick","onClick","autoFocus","defaultValue","event","target","value","trim","onKeyDown","key","onBlur","TodoList","todos","setTodos","changedTodos","map","filter","FILTERS","TodosFilter","setFilter","href","selected","TodoApp","todoTitle","setTodoTitle","uncompletedTodos","completedTodos","filteredTodos","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","onSubmit","preventDefault","Date","placeholder","length","every","htmlFor","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e502ca7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\n\nexport function TodoItem({ todo, completedToggle, deleteTodo, changeTodo }) {\n  const [editing, setEditing] = useState(false);\n  const [newTitle, setNewTitle] = useState(todo.title);\n\n  const handleChange = (event) => {\n    setNewTitle(event.target.value.trim());\n  };\n\n  const handleEdit = (event) => {\n    if (event.key === 'Enter') {\n      changeTodo(todo.id, newTitle);\n\n      if (!newTitle) {\n        deleteTodo(todo.id);\n      }\n\n      setEditing(false);\n    }\n\n    if (event.key === 'Escape') {\n      setNewTitle(todo.title);\n      setEditing(false);\n    }\n  };\n\n  const handleSaveChanges = () => {\n    changeTodo(todo.id, newTitle);\n\n    if (!newTitle) {\n      deleteTodo(todo.id);\n    }\n\n    setEditing(false);\n  };\n\n  return (\n    <li\n      className={ClassNames({\n        completed: todo.completed,\n        editing,\n      })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={() => completedToggle(todo.id)}\n        />\n        <label\n          onDoubleClick={() => setEditing(true)}\n        >\n          {todo.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteTodo(todo.id)}\n        />\n      </div>\n      {editing && (\n        <input\n          autoFocus\n          type=\"text\"\n          className=\"edit\"\n          defaultValue={todo.title}\n          onChange={handleChange}\n          onKeyDown={handleEdit}\n          onBlur={handleSaveChanges}\n        />\n      )}\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  completedToggle: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from './TodoItem';\n\nexport function TodoList({ todos, setTodos }) {\n  const completedToggle = (id) => {\n    const changedTodos = todos.map((todo) => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return {\n        ...todo,\n        completed: !todo.completed,\n      };\n    });\n\n    setTodos(changedTodos);\n  };\n\n  const deleteTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const changeTodo = (id, title) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return {\n        ...todo,\n        title,\n      };\n    }));\n  };\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          key={todo.id}\n          completedToggle={completedToggle}\n          deleteTodo={deleteTodo}\n          changeTodo={changeTodo}\n        />\n      ))}\n    </ul>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","export const FILTERS = {\n  all: 'All',\n  active: 'Active',\n  completed: 'Completed',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\n\nimport { FILTERS } from './constants';\n\nexport function TodosFilter({ filter, setFilter }) {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={ClassNames({\n            selected: filter === FILTERS.all,\n          })}\n          onClick={() => setFilter(FILTERS.all)}\n        >\n          {FILTERS.all}\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={ClassNames({\n            selected: filter === FILTERS.active,\n          })}\n          onClick={() => setFilter(FILTERS.active)}\n        >\n          {FILTERS.active}\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={ClassNames({\n            selected: filter === FILTERS.completed,\n          })}\n          onClick={() => setFilter(FILTERS.completed)}\n        >\n          {FILTERS.completed}\n        </a>\n      </li>\n    </ul>\n  );\n}\n\nTodosFilter.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { TodoList } from './TodoList';\nimport { TodosFilter } from './TodosFilter';\nimport { FILTERS } from './constants';\n\nexport const TodoApp = () => {\n  const [todos, setTodos] = useState([]);\n  const [todoTitle, setTodoTitle] = useState('');\n\n  const [filter, setFilter] = useState(FILTERS.all);\n  const uncompletedTodos = todos.filter(todo => !todo.completed);\n  const completedTodos = todos.filter(todo => todo.completed);\n\n  const filteredTodos = todos.filter((todo) => {\n    switch (filter) {\n      case FILTERS.completed:\n        return todo.completed;\n\n      case FILTERS.active:\n        return !todo.completed;\n\n      default:\n        return todo;\n    }\n  });\n\n  const changeAll = (event) => {\n    setTodos(todos.map(todo => ({\n      ...todo,\n      completed: event.target.checked,\n    })));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (todoTitle.trim()) {\n      setTodos([\n        ...todos,\n        {\n          title: todoTitle,\n          id: +new Date(),\n          completed: false,\n        },\n      ]);\n      setTodoTitle('');\n    } else {\n      setTodoTitle('');\n    }\n  };\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('todos'))) {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={todoTitle}\n            onChange={({ target }) => setTodoTitle(target.value)}\n          />\n        </form>\n      </header>\n      {todos.length > 0 && (\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={todos.every(todo => todo.completed) && todos.length > 0}\n            onChange={changeAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            todos={filteredTodos}\n            setTodos={setTodos}\n          />\n        </section>\n      )}\n      {todos.length > 0 && (\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {`${uncompletedTodos.length} items left`}\n          </span>\n\n          <TodosFilter\n            filter={filter}\n            setFilter={setFilter}\n          />\n\n          {completedTodos.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={() => setTodos(uncompletedTodos)}\n            >\n              Clear completed\n            </button>\n          )}\n        </footer>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp';\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n      <TodoApp />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}